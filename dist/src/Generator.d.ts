import { CaseBuilder } from './CaseBuilder';
export declare const Is: (value?: any, then?: any) => CaseBuilder;
export declare const Not: (value?: any, then?: any) => CaseBuilder;
export declare const IsNull: (then?: any) => CaseBuilder;
export declare const IsUndefined: (then?: any) => CaseBuilder;
export declare const IsNaN: (then?: any) => CaseBuilder;
export declare const BelongTo: (type: "object" | "undefined" | "boolean" | "number" | "string" | "array" | "function" | "symbol", then?: any) => CaseBuilder;
export declare const Case: (condition?: boolean, then?: any) => CaseBuilder;
export declare const In: (...value: any[]) => CaseBuilder;
export declare const NotIn: (...value: any[]) => CaseBuilder;
export declare const InRange: (start: number, end: number, then?: any) => CaseBuilder;
export declare const NotInRange: (start: number, end: number, then?: any) => CaseBuilder;
export declare const Match: (regexp?: boolean, then?: null) => CaseBuilder;
export declare const NotMatch: (regexp?: boolean, then?: null) => CaseBuilder;
export declare const Else: (then?: any) => CaseBuilder;
export declare const when: (...args: any) => any;
export declare const When: (...args: any) => any;
